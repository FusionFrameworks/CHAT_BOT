{"ast":null,"code":"var _jsxFileName = \"D:\\\\CHAT_BOT\\\\chatbot_Frontend\\\\src\\\\LabTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabTest = () => {\n  _s();\n  const [selectedTest, setSelectedTest] = useState(null);\n  const handlePayment = async test => {\n    setSelectedTest(test);\n\n    // Create order\n    try {\n      const {\n        data: order\n      } = await axios.post('http://localhost:5000/create-order', {\n        amount: parseInt(test.price.replace(/₹|,/g, ''), 10),\n        // Convert price to number\n        receipt: `receipt_${new Date().getTime()}`\n      });\n\n      // Initialize Razorpay payment\n      const options = {\n        key: 'your_key_id',\n        // Replace with your Razorpay Key ID\n        amount: order.amount,\n        currency: order.currency,\n        name: test.name,\n        description: 'Lab Test Booking',\n        order_id: order.id,\n        handler: function (response) {\n          alert(`Payment Successful: ${response.razorpay_payment_id}`);\n        },\n        prefill: {\n          name: 'Shashank Gaurav',\n          email: 'your_email@example.com',\n          contact: '9999999999'\n        },\n        theme: {\n          color: '#3399cc'\n        }\n      };\n      const razorpay = new window.Razorpay(options);\n      razorpay.open();\n    } catch (error) {\n      console.error('Payment Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lab Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: labTests.map((test, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: test.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", test.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Guidelines: \", test.guidelines]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePayment(test),\n          children: \"Book & Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(LabTest, \"J9EQIMaYj41te+YTDE8k6G1kmDc=\");\n_c = LabTest;\nexport default LabTest;\nvar _c;\n$RefreshReg$(_c, \"LabTest\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LabTest","_s","selectedTest","setSelectedTest","handlePayment","test","data","order","post","amount","parseInt","price","replace","receipt","Date","getTime","options","key","currency","name","description","order_id","id","handler","response","alert","razorpay_payment_id","prefill","email","contact","theme","color","razorpay","window","Razorpay","open","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","labTests","map","index","guidelines","onClick","_c","$RefreshReg$"],"sources":["D:/CHAT_BOT/chatbot_Frontend/src/LabTest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LabTest = () => {\r\n    const [selectedTest, setSelectedTest] = useState(null);\r\n\r\n    const handlePayment = async (test) => {\r\n        setSelectedTest(test);\r\n\r\n        // Create order\r\n        try {\r\n            const { data: order } = await axios.post('http://localhost:5000/create-order', {\r\n                amount: parseInt(test.price.replace(/₹|,/g, ''), 10), // Convert price to number\r\n                receipt: `receipt_${new Date().getTime()}`,\r\n            });\r\n\r\n            // Initialize Razorpay payment\r\n            const options = {\r\n                key: 'your_key_id', // Replace with your Razorpay Key ID\r\n                amount: order.amount,\r\n                currency: order.currency,\r\n                name: test.name,\r\n                description: 'Lab Test Booking',\r\n                order_id: order.id,\r\n                handler: function (response) {\r\n                    alert(`Payment Successful: ${response.razorpay_payment_id}`);\r\n                },\r\n                prefill: {\r\n                    name: 'Shashank Gaurav',\r\n                    email: 'your_email@example.com',\r\n                    contact: '9999999999',\r\n                },\r\n                theme: {\r\n                    color: '#3399cc',\r\n                },\r\n            };\r\n\r\n            const razorpay = new window.Razorpay(options);\r\n            razorpay.open();\r\n        } catch (error) {\r\n            console.error('Payment Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lab Tests</h1>\r\n            <ul>\r\n                {labTests.map((test, index) => (\r\n                    <li key={index}>\r\n                        <h3>{test.name}</h3>\r\n                        <p>Price: {test.price}</p>\r\n                        <p>Guidelines: {test.guidelines}</p>\r\n                        <button onClick={() => handlePayment(test)}>Book & Pay</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabTest;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,aAAa,GAAG,MAAOC,IAAI,IAAK;IAClCF,eAAe,CAACE,IAAI,CAAC;;IAErB;IACA,IAAI;MACA,MAAM;QAAEC,IAAI,EAAEC;MAAM,CAAC,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,oCAAoC,EAAE;QAC3EC,MAAM,EAAEC,QAAQ,CAACL,IAAI,CAACM,KAAK,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QAAE;QACtDC,OAAO,EAAE,WAAW,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAC5C,CAAC,CAAC;;MAEF;MACA,MAAMC,OAAO,GAAG;QACZC,GAAG,EAAE,aAAa;QAAE;QACpBR,MAAM,EAAEF,KAAK,CAACE,MAAM;QACpBS,QAAQ,EAAEX,KAAK,CAACW,QAAQ;QACxBC,IAAI,EAAEd,IAAI,CAACc,IAAI;QACfC,WAAW,EAAE,kBAAkB;QAC/BC,QAAQ,EAAEd,KAAK,CAACe,EAAE;QAClBC,OAAO,EAAE,SAAAA,CAAUC,QAAQ,EAAE;UACzBC,KAAK,CAAC,uBAAuBD,QAAQ,CAACE,mBAAmB,EAAE,CAAC;QAChE,CAAC;QACDC,OAAO,EAAE;UACLR,IAAI,EAAE,iBAAiB;UACvBS,KAAK,EAAE,wBAAwB;UAC/BC,OAAO,EAAE;QACb,CAAC;QACDC,KAAK,EAAE;UACHC,KAAK,EAAE;QACX;MACJ,CAAC;MAED,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAAClB,OAAO,CAAC;MAC7CgB,QAAQ,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IAC1C;EACJ,CAAC;EAED,oBACIrC,OAAA;IAAAuC,QAAA,gBACIvC,OAAA;MAAAuC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3C,OAAA;MAAAuC,QAAA,EACKK,QAAQ,CAACC,GAAG,CAAC,CAACvC,IAAI,EAAEwC,KAAK,kBACtB9C,OAAA;QAAAuC,QAAA,gBACIvC,OAAA;UAAAuC,QAAA,EAAKjC,IAAI,CAACc;QAAI;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpB3C,OAAA;UAAAuC,QAAA,GAAG,SAAO,EAACjC,IAAI,CAACM,KAAK;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B3C,OAAA;UAAAuC,QAAA,GAAG,cAAY,EAACjC,IAAI,CAACyC,UAAU;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpC3C,OAAA;UAAQgD,OAAO,EAAEA,CAAA,KAAM3C,aAAa,CAACC,IAAI,CAAE;UAAAiC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJ1DG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACzC,EAAA,CAxDID,OAAO;AAAAgD,EAAA,GAAPhD,OAAO;AA0Db,eAAeA,OAAO;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}