{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Assistants\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessagePage = exports.MessageInstance = exports.MessageListInstance = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../base/Page\"));\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nfunction MessageListInstance(version, sessionId) {\n  if (!(0, utility_1.isValidPathParam)(sessionId)) {\n    throw new Error(\"Parameter 'sessionId' is not valid.\");\n  }\n  const instance = {};\n  instance._version = version;\n  instance._solution = {\n    sessionId\n  };\n  instance._uri = `/Sessions/${sessionId}/Messages`;\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new MessagePage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new MessagePage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.MessageListInstance = MessageListInstance;\nclass MessageInstance {\n  constructor(_version, payload, sessionId) {\n    this._version = _version;\n    this.id = payload.id;\n    this.accountSid = payload.account_sid;\n    this.assistantId = payload.assistant_id;\n    this.sessionId = payload.session_id;\n    this.identity = payload.identity;\n    this.role = payload.role;\n    this.content = payload.content;\n    this.meta = payload.meta;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      id: this.id,\n      accountSid: this.accountSid,\n      assistantId: this.assistantId,\n      sessionId: this.sessionId,\n      identity: this.identity,\n      role: this.role,\n      content: this.content,\n      meta: this.meta,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.MessageInstance = MessageInstance;\nclass MessagePage extends Page_1.default {\n  /**\n   * Initialize the MessagePage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of MessageInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new MessageInstance(this._version, payload, this._solution.sessionId);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.MessagePage = MessagePage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","MessagePage","MessageInstance","MessageListInstance","util_1","require","Page_1","deserialize","serialize","utility_1","version","sessionId","isValidPathParam","Error","instance","_version","_solution","_uri","page","params","callback","Function","data","undefined","pageNumber","pageToken","headers","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","toJSON","inspect","custom","inspectImpl","_depth","options","constructor","id","accountSid","account_sid","assistantId","assistant_id","session_id","identity","role","content","meta","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","default","response","solution","getInstance","depth"],"sources":["D:/CHAT_BOT/chatbot_Frontend/node_modules/twilio/lib/rest/assistants/v1/session/message.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Assistants\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessagePage = exports.MessageInstance = exports.MessageListInstance = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../base/Page\"));\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nfunction MessageListInstance(version, sessionId) {\n    if (!(0, utility_1.isValidPathParam)(sessionId)) {\n        throw new Error(\"Parameter 'sessionId' is not valid.\");\n    }\n    const instance = {};\n    instance._version = version;\n    instance._solution = { sessionId };\n    instance._uri = `/Sessions/${sessionId}/Messages`;\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new MessagePage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new MessagePage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.MessageListInstance = MessageListInstance;\nclass MessageInstance {\n    constructor(_version, payload, sessionId) {\n        this._version = _version;\n        this.id = payload.id;\n        this.accountSid = payload.account_sid;\n        this.assistantId = payload.assistant_id;\n        this.sessionId = payload.session_id;\n        this.identity = payload.identity;\n        this.role = payload.role;\n        this.content = payload.content;\n        this.meta = payload.meta;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            id: this.id,\n            accountSid: this.accountSid,\n            assistantId: this.assistantId,\n            sessionId: this.sessionId,\n            identity: this.identity,\n            role: this.role,\n            content: this.content,\n            meta: this.meta,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.MessageInstance = MessageInstance;\nclass MessagePage extends Page_1.default {\n    /**\n     * Initialize the MessagePage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of MessageInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new MessageInstance(this._version, payload, this._solution.sessionId);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.MessagePage = MessagePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}