{"ast":null,"code":"var _jsxFileName = \"D:\\\\ChatBot\\\\chatbot-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { sendMessage } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (input.trim() === '') return;\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    const response = await sendMessage(input);\n    const botMessage = {\n      text: response.reply,\n      sender: 'bot'\n    };\n    setMessages([...messages, userMessage, botMessage]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","sendMessage","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","handleSend","trim","userMessage","text","sender","response","botMessage","reply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/ChatBot/chatbot-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { sendMessage } from './api';\n\nfunction App() {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n\n    const handleSend = async () => {\n        if (input.trim() === '') return;\n\n        const userMessage = { text: input, sender: 'user' };\n        setMessages([...messages, userMessage]);\n        setInput('');\n\n        const response = await sendMessage(input);\n        const botMessage = { text: response.reply, sender: 'bot' };\n        setMessages([...messages, userMessage, botMessage]);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Chatbot</h1>\n            <div className=\"chat-container\">\n                {messages.map((msg, index) => (\n                    <div key={index} className={`message ${msg.sender}`}>\n                        {msg.text}\n                    </div>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type a message...\"\n            />\n            <button onClick={handleSend}>Send</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,SAASC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAEzB,MAAMC,WAAW,GAAG;MAAEC,IAAI,EAAEL,KAAK;MAAEM,MAAM,EAAE;IAAO,CAAC;IACnDP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,WAAW,CAAC,CAAC;IACvCH,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMM,QAAQ,GAAG,MAAMd,WAAW,CAACO,KAAK,CAAC;IACzC,MAAMQ,UAAU,GAAG;MAAEH,IAAI,EAAEE,QAAQ,CAACE,KAAK;MAAEH,MAAM,EAAE;IAAM,CAAC;IAC1DP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,WAAW,EAAEI,UAAU,CAAC,CAAC;EACvD,CAAC;EAED,oBACIb,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBhB,OAAA;MAAAgB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBpB,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC1Bb,QAAQ,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBvB,OAAA;QAAiBe,SAAS,EAAE,WAAWO,GAAG,CAACX,MAAM,EAAG;QAAAK,QAAA,EAC/CM,GAAG,CAACZ;MAAI,GADHa,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNpB,OAAA;MACIwB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,KAAM;MACbqB,QAAQ,EAAGC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAmB;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFpB,OAAA;MAAQ8B,OAAO,EAAEvB,UAAW;MAAAS,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd;AAAClB,EAAA,CAnCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}