{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Taskrouter\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaskQueuePage = exports.TaskQueueListInstance = exports.TaskQueueInstance = exports.TaskQueueContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../base/Page\"));\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nconst taskQueueBulkRealTimeStatistics_1 = require(\"./taskQueue/taskQueueBulkRealTimeStatistics\");\nconst taskQueueCumulativeStatistics_1 = require(\"./taskQueue/taskQueueCumulativeStatistics\");\nconst taskQueueRealTimeStatistics_1 = require(\"./taskQueue/taskQueueRealTimeStatistics\");\nconst taskQueueStatistics_1 = require(\"./taskQueue/taskQueueStatistics\");\nconst taskQueuesStatistics_1 = require(\"./taskQueue/taskQueuesStatistics\");\nclass TaskQueueContextImpl {\n  constructor(_version, workspaceSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n      throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      workspaceSid,\n      sid\n    };\n    this._uri = `/Workspaces/${workspaceSid}/TaskQueues/${sid}`;\n  }\n  get cumulativeStatistics() {\n    this._cumulativeStatistics = this._cumulativeStatistics || (0, taskQueueCumulativeStatistics_1.TaskQueueCumulativeStatisticsListInstance)(this._version, this._solution.workspaceSid, this._solution.sid);\n    return this._cumulativeStatistics;\n  }\n  get realTimeStatistics() {\n    this._realTimeStatistics = this._realTimeStatistics || (0, taskQueueRealTimeStatistics_1.TaskQueueRealTimeStatisticsListInstance)(this._version, this._solution.workspaceSid, this._solution.sid);\n    return this._realTimeStatistics;\n  }\n  get statistics() {\n    this._statistics = this._statistics || (0, taskQueueStatistics_1.TaskQueueStatisticsListInstance)(this._version, this._solution.workspaceSid, this._solution.sid);\n    return this._statistics;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new TaskQueueInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"targetWorkers\"] !== undefined) data[\"TargetWorkers\"] = params[\"targetWorkers\"];\n    if (params[\"reservationActivitySid\"] !== undefined) data[\"ReservationActivitySid\"] = params[\"reservationActivitySid\"];\n    if (params[\"assignmentActivitySid\"] !== undefined) data[\"AssignmentActivitySid\"] = params[\"assignmentActivitySid\"];\n    if (params[\"maxReservedWorkers\"] !== undefined) data[\"MaxReservedWorkers\"] = params[\"maxReservedWorkers\"];\n    if (params[\"taskOrder\"] !== undefined) data[\"TaskOrder\"] = params[\"taskOrder\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TaskQueueInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TaskQueueContextImpl = TaskQueueContextImpl;\nclass TaskQueueInstance {\n  constructor(_version, payload, workspaceSid, sid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.assignmentActivitySid = payload.assignment_activity_sid;\n    this.assignmentActivityName = payload.assignment_activity_name;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.friendlyName = payload.friendly_name;\n    this.maxReservedWorkers = deserialize.integer(payload.max_reserved_workers);\n    this.reservationActivitySid = payload.reservation_activity_sid;\n    this.reservationActivityName = payload.reservation_activity_name;\n    this.sid = payload.sid;\n    this.targetWorkers = payload.target_workers;\n    this.taskOrder = payload.task_order;\n    this.url = payload.url;\n    this.workspaceSid = payload.workspace_sid;\n    this.links = payload.links;\n    this._solution = {\n      workspaceSid,\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new TaskQueueContextImpl(this._version, this._solution.workspaceSid, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a TaskQueueInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a TaskQueueInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed TaskQueueInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Access the cumulativeStatistics.\n   */\n  cumulativeStatistics() {\n    return this._proxy.cumulativeStatistics;\n  }\n  /**\n   * Access the realTimeStatistics.\n   */\n  realTimeStatistics() {\n    return this._proxy.realTimeStatistics;\n  }\n  /**\n   * Access the statistics.\n   */\n  statistics() {\n    return this._proxy.statistics;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      assignmentActivitySid: this.assignmentActivitySid,\n      assignmentActivityName: this.assignmentActivityName,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      friendlyName: this.friendlyName,\n      maxReservedWorkers: this.maxReservedWorkers,\n      reservationActivitySid: this.reservationActivitySid,\n      reservationActivityName: this.reservationActivityName,\n      sid: this.sid,\n      targetWorkers: this.targetWorkers,\n      taskOrder: this.taskOrder,\n      url: this.url,\n      workspaceSid: this.workspaceSid,\n      links: this.links\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TaskQueueInstance = TaskQueueInstance;\nfunction TaskQueueListInstance(version, workspaceSid) {\n  if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n    throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n  }\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new TaskQueueContextImpl(version, workspaceSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    workspaceSid\n  };\n  instance._uri = `/Workspaces/${workspaceSid}/TaskQueues`;\n  Object.defineProperty(instance, \"bulkRealTimeStatistics\", {\n    get: function bulkRealTimeStatistics() {\n      if (!instance._bulkRealTimeStatistics) {\n        instance._bulkRealTimeStatistics = (0, taskQueueBulkRealTimeStatistics_1.TaskQueueBulkRealTimeStatisticsListInstance)(instance._version, instance._solution.workspaceSid);\n      }\n      return instance._bulkRealTimeStatistics;\n    }\n  });\n  Object.defineProperty(instance, \"statistics\", {\n    get: function statistics() {\n      if (!instance._statistics) {\n        instance._statistics = (0, taskQueuesStatistics_1.TaskQueuesStatisticsListInstance)(instance._version, instance._solution.workspaceSid);\n      }\n      return instance._statistics;\n    }\n  });\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"friendlyName\"] === null || params[\"friendlyName\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['friendlyName']\\\" missing.\");\n    }\n    let data = {};\n    data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"targetWorkers\"] !== undefined) data[\"TargetWorkers\"] = params[\"targetWorkers\"];\n    if (params[\"maxReservedWorkers\"] !== undefined) data[\"MaxReservedWorkers\"] = params[\"maxReservedWorkers\"];\n    if (params[\"taskOrder\"] !== undefined) data[\"TaskOrder\"] = params[\"taskOrder\"];\n    if (params[\"reservationActivitySid\"] !== undefined) data[\"ReservationActivitySid\"] = params[\"reservationActivitySid\"];\n    if (params[\"assignmentActivitySid\"] !== undefined) data[\"AssignmentActivitySid\"] = params[\"assignmentActivitySid\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TaskQueueInstance(operationVersion, payload, instance._solution.workspaceSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"evaluateWorkerAttributes\"] !== undefined) data[\"EvaluateWorkerAttributes\"] = params[\"evaluateWorkerAttributes\"];\n    if (params[\"workerSid\"] !== undefined) data[\"WorkerSid\"] = params[\"workerSid\"];\n    if (params[\"ordering\"] !== undefined) data[\"Ordering\"] = params[\"ordering\"];\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TaskQueuePage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new TaskQueuePage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.TaskQueueListInstance = TaskQueueListInstance;\nclass TaskQueuePage extends Page_1.default {\n  /**\n   * Initialize the TaskQueuePage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of TaskQueueInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new TaskQueueInstance(this._version, payload, this._solution.workspaceSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TaskQueuePage = TaskQueuePage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","TaskQueuePage","TaskQueueListInstance","TaskQueueInstance","TaskQueueContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","taskQueueBulkRealTimeStatistics_1","taskQueueCumulativeStatistics_1","taskQueueRealTimeStatistics_1","taskQueueStatistics_1","taskQueuesStatistics_1","constructor","_version","workspaceSid","sid","isValidPathParam","Error","_solution","_uri","cumulativeStatistics","_cumulativeStatistics","TaskQueueCumulativeStatisticsListInstance","realTimeStatistics","_realTimeStatistics","TaskQueueRealTimeStatisticsListInstance","statistics","_statistics","TaskQueueStatisticsListInstance","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","Function","data","undefined","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","assignmentActivitySid","assignment_activity_sid","assignmentActivityName","assignment_activity_name","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","maxReservedWorkers","integer","max_reserved_workers","reservationActivitySid","reservation_activity_sid","reservationActivityName","reservation_activity_name","targetWorkers","target_workers","taskOrder","task_order","url","workspace_sid","links","_proxy","_context","version","get","bulkRealTimeStatistics","_bulkRealTimeStatistics","TaskQueueBulkRealTimeStatisticsListInstance","TaskQueuesStatisticsListInstance","create","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["D:/CHAT_BOT/chatbot_Frontend/node_modules/twilio/lib/rest/taskrouter/v1/workspace/taskQueue.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Taskrouter\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaskQueuePage = exports.TaskQueueListInstance = exports.TaskQueueInstance = exports.TaskQueueContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../base/Page\"));\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nconst taskQueueBulkRealTimeStatistics_1 = require(\"./taskQueue/taskQueueBulkRealTimeStatistics\");\nconst taskQueueCumulativeStatistics_1 = require(\"./taskQueue/taskQueueCumulativeStatistics\");\nconst taskQueueRealTimeStatistics_1 = require(\"./taskQueue/taskQueueRealTimeStatistics\");\nconst taskQueueStatistics_1 = require(\"./taskQueue/taskQueueStatistics\");\nconst taskQueuesStatistics_1 = require(\"./taskQueue/taskQueuesStatistics\");\nclass TaskQueueContextImpl {\n    constructor(_version, workspaceSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n            throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { workspaceSid, sid };\n        this._uri = `/Workspaces/${workspaceSid}/TaskQueues/${sid}`;\n    }\n    get cumulativeStatistics() {\n        this._cumulativeStatistics =\n            this._cumulativeStatistics ||\n                (0, taskQueueCumulativeStatistics_1.TaskQueueCumulativeStatisticsListInstance)(this._version, this._solution.workspaceSid, this._solution.sid);\n        return this._cumulativeStatistics;\n    }\n    get realTimeStatistics() {\n        this._realTimeStatistics =\n            this._realTimeStatistics ||\n                (0, taskQueueRealTimeStatistics_1.TaskQueueRealTimeStatisticsListInstance)(this._version, this._solution.workspaceSid, this._solution.sid);\n        return this._realTimeStatistics;\n    }\n    get statistics() {\n        this._statistics =\n            this._statistics ||\n                (0, taskQueueStatistics_1.TaskQueueStatisticsListInstance)(this._version, this._solution.workspaceSid, this._solution.sid);\n        return this._statistics;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new TaskQueueInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"targetWorkers\"] !== undefined)\n            data[\"TargetWorkers\"] = params[\"targetWorkers\"];\n        if (params[\"reservationActivitySid\"] !== undefined)\n            data[\"ReservationActivitySid\"] = params[\"reservationActivitySid\"];\n        if (params[\"assignmentActivitySid\"] !== undefined)\n            data[\"AssignmentActivitySid\"] = params[\"assignmentActivitySid\"];\n        if (params[\"maxReservedWorkers\"] !== undefined)\n            data[\"MaxReservedWorkers\"] = params[\"maxReservedWorkers\"];\n        if (params[\"taskOrder\"] !== undefined)\n            data[\"TaskOrder\"] = params[\"taskOrder\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TaskQueueInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TaskQueueContextImpl = TaskQueueContextImpl;\nclass TaskQueueInstance {\n    constructor(_version, payload, workspaceSid, sid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.assignmentActivitySid = payload.assignment_activity_sid;\n        this.assignmentActivityName = payload.assignment_activity_name;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.friendlyName = payload.friendly_name;\n        this.maxReservedWorkers = deserialize.integer(payload.max_reserved_workers);\n        this.reservationActivitySid = payload.reservation_activity_sid;\n        this.reservationActivityName = payload.reservation_activity_name;\n        this.sid = payload.sid;\n        this.targetWorkers = payload.target_workers;\n        this.taskOrder = payload.task_order;\n        this.url = payload.url;\n        this.workspaceSid = payload.workspace_sid;\n        this.links = payload.links;\n        this._solution = { workspaceSid, sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new TaskQueueContextImpl(this._version, this._solution.workspaceSid, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a TaskQueueInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a TaskQueueInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed TaskQueueInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Access the cumulativeStatistics.\n     */\n    cumulativeStatistics() {\n        return this._proxy.cumulativeStatistics;\n    }\n    /**\n     * Access the realTimeStatistics.\n     */\n    realTimeStatistics() {\n        return this._proxy.realTimeStatistics;\n    }\n    /**\n     * Access the statistics.\n     */\n    statistics() {\n        return this._proxy.statistics;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            assignmentActivitySid: this.assignmentActivitySid,\n            assignmentActivityName: this.assignmentActivityName,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            friendlyName: this.friendlyName,\n            maxReservedWorkers: this.maxReservedWorkers,\n            reservationActivitySid: this.reservationActivitySid,\n            reservationActivityName: this.reservationActivityName,\n            sid: this.sid,\n            targetWorkers: this.targetWorkers,\n            taskOrder: this.taskOrder,\n            url: this.url,\n            workspaceSid: this.workspaceSid,\n            links: this.links,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TaskQueueInstance = TaskQueueInstance;\nfunction TaskQueueListInstance(version, workspaceSid) {\n    if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n        throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n    }\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new TaskQueueContextImpl(version, workspaceSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { workspaceSid };\n    instance._uri = `/Workspaces/${workspaceSid}/TaskQueues`;\n    Object.defineProperty(instance, \"bulkRealTimeStatistics\", {\n        get: function bulkRealTimeStatistics() {\n            if (!instance._bulkRealTimeStatistics) {\n                instance._bulkRealTimeStatistics =\n                    (0, taskQueueBulkRealTimeStatistics_1.TaskQueueBulkRealTimeStatisticsListInstance)(instance._version, instance._solution.workspaceSid);\n            }\n            return instance._bulkRealTimeStatistics;\n        },\n    });\n    Object.defineProperty(instance, \"statistics\", {\n        get: function statistics() {\n            if (!instance._statistics) {\n                instance._statistics = (0, taskQueuesStatistics_1.TaskQueuesStatisticsListInstance)(instance._version, instance._solution.workspaceSid);\n            }\n            return instance._statistics;\n        },\n    });\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"friendlyName\"] === null ||\n            params[\"friendlyName\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['friendlyName']\\\" missing.\");\n        }\n        let data = {};\n        data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"targetWorkers\"] !== undefined)\n            data[\"TargetWorkers\"] = params[\"targetWorkers\"];\n        if (params[\"maxReservedWorkers\"] !== undefined)\n            data[\"MaxReservedWorkers\"] = params[\"maxReservedWorkers\"];\n        if (params[\"taskOrder\"] !== undefined)\n            data[\"TaskOrder\"] = params[\"taskOrder\"];\n        if (params[\"reservationActivitySid\"] !== undefined)\n            data[\"ReservationActivitySid\"] = params[\"reservationActivitySid\"];\n        if (params[\"assignmentActivitySid\"] !== undefined)\n            data[\"AssignmentActivitySid\"] = params[\"assignmentActivitySid\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TaskQueueInstance(operationVersion, payload, instance._solution.workspaceSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"evaluateWorkerAttributes\"] !== undefined)\n            data[\"EvaluateWorkerAttributes\"] = params[\"evaluateWorkerAttributes\"];\n        if (params[\"workerSid\"] !== undefined)\n            data[\"WorkerSid\"] = params[\"workerSid\"];\n        if (params[\"ordering\"] !== undefined)\n            data[\"Ordering\"] = params[\"ordering\"];\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TaskQueuePage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new TaskQueuePage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.TaskQueueListInstance = TaskQueueListInstance;\nclass TaskQueuePage extends Page_1.default {\n    /**\n     * Initialize the TaskQueuePage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of TaskQueueInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new TaskQueueInstance(this._version, payload, this._solution.workspaceSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TaskQueuePage = TaskQueuePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}