{"ast":null,"code":"// // // Chatbot.js\n// // import React, { useState } from \"react\";\n\n// // const Chatbot = () => {\n// //     const [userInput, setUserInput] = useState(\"\");\n// //     const [responses, setResponses] = useState([]);\n\n// //     const handleUserInput = (e) => {\n// //         setUserInput(e.target.value);\n// //     };\n\n// //     const handleSend = () => {\n// //         if (userInput.trim()) {\n// //             // Simulating sending the user's input to the backend and getting a response\n// //             const newResponse = `You said: ${userInput}`; // Replace with your API call\n// //             setResponses((prevResponses) => [...prevResponses, newResponse]);\n// //             setUserInput(\"\");\n// //         }\n// //     };\n\n// //     return (\n// //         <div className=\"chatbot-container p-6 bg-white rounded-lg shadow-md\">\n// //             <h2 className=\"text-2xl font-semibold mb-4\">ðŸ¤– Chatbot</h2>\n// //             <div className=\"chatbox border border-gray-300 p-4 h-64 overflow-y-auto\">\n// //                 {responses.map((response, index) => (\n// //                     <p key={index}>{response}</p>\n// //                 ))}\n// //             </div>\n// //             <div className=\"flex mt-4\">\n// //                 <input\n// //                     type=\"text\"\n// //                     value={userInput}\n// //                     onChange={handleUserInput}\n// //                     placeholder=\"Type your message...\"\n// //                     className=\"border border-gray-300 rounded-l-lg p-2 flex-1\"\n// //                 />\n// //                 <button\n// //                     onClick={handleSend}\n// //                     className=\"bg-blue-600 text-white rounded-r-lg p-2\"\n// //                 >\n// //                     Send\n// //                 </button>\n// //             </div>\n// //         </div>\n// //     );\n// // };\n\n// // export default Chatbot;\n\n// // import React, { useState, useEffect, useRef } from \"react\";\n\n// // const Chatbot = () => {\n// //     const [userInput, setUserInput] = useState(\"\");\n// //     const [responses, setResponses] = useState([]);\n// //     const chatboxRef = useRef();\n\n// //     useEffect(() => {\n// //         // Welcoming message\n// //         const welcomeMessage = \"ðŸ‘‹ Welcome to the Health Chatbot! How can I assist you today?\";\n// //         setResponses([welcomeMessage]);\n\n// //         // Auto-focus on the input field when the component mounts\n// //         const inputField = document.getElementById(\"user-input\");\n// //         if (inputField) {\n// //             inputField.focus();\n// //         }\n// //     }, []);\n\n// //     const handleUserInput = (e) => {\n// //         setUserInput(e.target.value);\n// //     };\n\n// //     const handleSend = async () => {\n// //         if (userInput.trim()) {\n// //             // Simulate sending the user's input to the backend and getting a response\n// //             const newResponse = await simulateApiCall(userInput); // Replace with your API call\n// //             setResponses((prevResponses) => [...prevResponses, `You said: ${userInput}`, newResponse]);\n// //             setUserInput(\"\");\n// //         }\n// //     };\n\n// //     const simulateApiCall = async (input) => {\n// //         // Simulate an API call delay\n// //         return new Promise((resolve) => {\n// //             setTimeout(() => {\n// //                 // Simulated response based on user input\n// //                 const responses = {\n// //                     \"hello\": \"Hello! How can I help you?\",\n// //                     \"symptoms\": \"Please tell me your symptoms one by one.\",\n// //                     \"bye\": \"Goodbye! Take care!\",\n// //                 };\n// //                 resolve(responses[input.toLowerCase()] || \"I'm not sure how to respond to that.\");\n// //             }, 1000);\n// //         });\n// //     };\n\n// //     const handleClearChat = () => {\n// //         setResponses([]);\n// //         const welcomeMessage = \"ðŸ‘‹ Welcome to the Health Chatbot! How can I assist you today?\";\n// //         setResponses([welcomeMessage]);\n// //     };\n\n// //     useEffect(() => {\n// //         if (chatboxRef.current) {\n// //             chatboxRef.current.scrollTop = chatboxRef.current.scrollHeight;\n// //         }\n// //     }, [responses]);\n\n// //     return (\n// //         <div className=\"chatbot-container p-6 bg-white rounded-lg shadow-md\">\n// //             <h2 className=\"text-2xl font-semibold mb-4\">ðŸ¤– Chatbot</h2>\n// //             <div className=\"chatbox border border-gray-300 p-4 h-64 overflow-y-auto\" ref={chatboxRef}>\n// //                 {responses.map((response, index) => (\n// //                     <p key={index}>{response}</p>\n// //                 ))}\n// //             </div>\n// //             <div className=\"flex mt-4\">\n// //                 <input\n// //                     id=\"user-input\"\n// //                     type=\"text\"\n// //                     value={userInput}\n// //                     onChange={handleUserInput}\n// //                     placeholder=\"Type your message...\"\n// //                     className=\"border border-gray-300 rounded-l-lg p-2 flex-1\"\n// //                 />\n// //                 <button\n// //                     onClick={handleSend}\n// //                     className=\"bg-blue-600 text-white rounded-r-lg p-2\"\n// //                 >\n// //                     Send\n// //                 </button>\n// //             </div>\n// //             <button onClick={handleClearChat} className=\"bg-red-600 text-white rounded p-2 mt-2\">\n// //                 Clear Chat\n// //             </button>\n// //         </div>\n// //     );\n// // };\n\n// // export default Chatbot;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import axios from \"axios\";\n\n// const Chatbot = () => {\n//     const [userInput, setUserInput] = useState(\"\");\n//     const [responses, setResponses] = useState([]);\n//     const chatboxRef = useRef();\n\n//     useEffect(() => {\n//         const welcomeMessage = \"ðŸ‘‹ Welcome to the Health Chatbot! How can I assist you today?\";\n//         setResponses([welcomeMessage]);\n\n//         const inputField = document.getElementById(\"user-input\");\n//         if (inputField) {\n//             inputField.focus();\n//         }\n//     }, []);\n\n//     const handleUserInput = (e) => {\n//         setUserInput(e.target.value);\n//     };\n\n//     const handleSend = async () => {\n//         if (userInput.trim()) {\n//             try {\n//                 // Make API call to your Flask backend\n//                 const response = await axios.post(\"http://localhost:5000/chatbot\", {\n//                     symptoms: userInput,\n//                 });\n\n//                 const newResponse = response.data.message || response.data.suggestions;\n//                 setResponses((prevResponses) => [\n//                     ...prevResponses,\n//                     `You said: ${userInput}`,\n//                     newResponse\n//                         ? `Suggestion: ${JSON.stringify(newResponse)}`\n//                         : \"I'm not sure how to respond to that.\",\n//                 ]);\n//             } catch (error) {\n//                 console.error(\"Error fetching data from API:\", error);\n//                 setResponses((prevResponses) => [\n//                     ...prevResponses,\n//                     \"Error: Unable to reach the backend.\",\n//                 ]);\n//             }\n//             setUserInput(\"\");\n//         }\n//     };\n\n//     const handleClearChat = () => {\n//         const welcomeMessage = \"ðŸ‘‹ Welcome to the Health Chatbot! How can I assist you today?\";\n//         setResponses([welcomeMessage]);\n//     };\n\n//     useEffect(() => {\n//         if (chatboxRef.current) {\n//             chatboxRef.current.scrollTop = chatboxRef.current.scrollHeight;\n//         }\n//     }, [responses]);\n\n//     return (\n//         <div className=\"chatbot-container p-6 bg-white rounded-lg shadow-md\">\n//             <h2 className=\"text-2xl font-semibold mb-4\">ðŸ¤– Chatbot</h2>\n//             <div className=\"chatbox border border-gray-300 p-4 h-64 overflow-y-auto\" ref={chatboxRef}>\n//                 {responses.map((response, index) => (\n//                     <p key={index}>{response}</p>\n//                 ))}\n//             </div>\n//             <div className=\"flex mt-4\">\n//                 <input\n//                     id=\"user-input\"\n//                     type=\"text\"\n//                     value={userInput}\n//                     onChange={handleUserInput}\n//                     placeholder=\"Type your message...\"\n//                     className=\"border border-gray-300 rounded-l-lg p-2 flex-1\"\n//                 />\n//                 <button onClick={handleSend} className=\"bg-blue-600 text-white rounded-r-lg p-2\">\n//                     Send\n//                 </button>\n//             </div>\n//             <button onClick={handleClearChat} className=\"bg-red-600 text-white rounded p-2 mt-2\">\n//                 Clear Chat\n//             </button>\n//         </div>\n//     );\n// };\n\n// export default Chatbot;","map":{"version":3,"names":[],"sources":["D:/CHAT_BOT/chatbot_Frontend/src/Chatbot.js"],"sourcesContent":["// // // Chatbot.js\r\n// // import React, { useState } from \"react\";\r\n\r\n// // const Chatbot = () => {\r\n// //     const [userInput, setUserInput] = useState(\"\");\r\n// //     const [responses, setResponses] = useState([]);\r\n\r\n// //     const handleUserInput = (e) => {\r\n// //         setUserInput(e.target.value);\r\n// //     };\r\n\r\n// //     const handleSend = () => {\r\n// //         if (userInput.trim()) {\r\n// //             // Simulating sending the user's input to the backend and getting a response\r\n// //             const newResponse = `You said: ${userInput}`; // Replace with your API call\r\n// //             setResponses((prevResponses) => [...prevResponses, newResponse]);\r\n// //             setUserInput(\"\");\r\n// //         }\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div className=\"chatbot-container p-6 bg-white rounded-lg shadow-md\">\r\n// //             <h2 className=\"text-2xl font-semibold mb-4\">ðŸ¤– Chatbot</h2>\r\n// //             <div className=\"chatbox border border-gray-300 p-4 h-64 overflow-y-auto\">\r\n// //                 {responses.map((response, index) => (\r\n// //                     <p key={index}>{response}</p>\r\n// //                 ))}\r\n// //             </div>\r\n// //             <div className=\"flex mt-4\">\r\n// //                 <input\r\n// //                     type=\"text\"\r\n// //                     value={userInput}\r\n// //                     onChange={handleUserInput}\r\n// //                     placeholder=\"Type your message...\"\r\n// //                     className=\"border border-gray-300 rounded-l-lg p-2 flex-1\"\r\n// //                 />\r\n// //                 <button\r\n// //                     onClick={handleSend}\r\n// //                     className=\"bg-blue-600 text-white rounded-r-lg p-2\"\r\n// //                 >\r\n// //                     Send\r\n// //                 </button>\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default Chatbot;\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// // const Chatbot = () => {\r\n// //     const [userInput, setUserInput] = useState(\"\");\r\n// //     const [responses, setResponses] = useState([]);\r\n// //     const chatboxRef = useRef();\r\n\r\n// //     useEffect(() => {\r\n// //         // Welcoming message\r\n// //         const welcomeMessage = \"ðŸ‘‹ Welcome to the Health Chatbot! How can I assist you today?\";\r\n// //         setResponses([welcomeMessage]);\r\n        \r\n// //         // Auto-focus on the input field when the component mounts\r\n// //         const inputField = document.getElementById(\"user-input\");\r\n// //         if (inputField) {\r\n// //             inputField.focus();\r\n// //         }\r\n// //     }, []);\r\n\r\n// //     const handleUserInput = (e) => {\r\n// //         setUserInput(e.target.value);\r\n// //     };\r\n\r\n// //     const handleSend = async () => {\r\n// //         if (userInput.trim()) {\r\n// //             // Simulate sending the user's input to the backend and getting a response\r\n// //             const newResponse = await simulateApiCall(userInput); // Replace with your API call\r\n// //             setResponses((prevResponses) => [...prevResponses, `You said: ${userInput}`, newResponse]);\r\n// //             setUserInput(\"\");\r\n// //         }\r\n// //     };\r\n\r\n// //     const simulateApiCall = async (input) => {\r\n// //         // Simulate an API call delay\r\n// //         return new Promise((resolve) => {\r\n// //             setTimeout(() => {\r\n// //                 // Simulated response based on user input\r\n// //                 const responses = {\r\n// //                     \"hello\": \"Hello! How can I help you?\",\r\n// //                     \"symptoms\": \"Please tell me your symptoms one by one.\",\r\n// //                     \"bye\": \"Goodbye! Take care!\",\r\n// //                 };\r\n// //                 resolve(responses[input.toLowerCase()] || \"I'm not sure how to respond to that.\");\r\n// //             }, 1000);\r\n// //         });\r\n// //     };\r\n\r\n// //     const handleClearChat = () => {\r\n// //         setResponses([]);\r\n// //         const welcomeMessage = \"ðŸ‘‹ Welcome to the Health Chatbot! How can I assist you today?\";\r\n// //         setResponses([welcomeMessage]);\r\n// //     };\r\n\r\n// //     useEffect(() => {\r\n// //         if (chatboxRef.current) {\r\n// //             chatboxRef.current.scrollTop = chatboxRef.current.scrollHeight;\r\n// //         }\r\n// //     }, [responses]);\r\n\r\n// //     return (\r\n// //         <div className=\"chatbot-container p-6 bg-white rounded-lg shadow-md\">\r\n// //             <h2 className=\"text-2xl font-semibold mb-4\">ðŸ¤– Chatbot</h2>\r\n// //             <div className=\"chatbox border border-gray-300 p-4 h-64 overflow-y-auto\" ref={chatboxRef}>\r\n// //                 {responses.map((response, index) => (\r\n// //                     <p key={index}>{response}</p>\r\n// //                 ))}\r\n// //             </div>\r\n// //             <div className=\"flex mt-4\">\r\n// //                 <input\r\n// //                     id=\"user-input\"\r\n// //                     type=\"text\"\r\n// //                     value={userInput}\r\n// //                     onChange={handleUserInput}\r\n// //                     placeholder=\"Type your message...\"\r\n// //                     className=\"border border-gray-300 rounded-l-lg p-2 flex-1\"\r\n// //                 />\r\n// //                 <button\r\n// //                     onClick={handleSend}\r\n// //                     className=\"bg-blue-600 text-white rounded-r-lg p-2\"\r\n// //                 >\r\n// //                     Send\r\n// //                 </button>\r\n// //             </div>\r\n// //             <button onClick={handleClearChat} className=\"bg-red-600 text-white rounded p-2 mt-2\">\r\n// //                 Clear Chat\r\n// //             </button>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default Chatbot;\r\n\r\n\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const Chatbot = () => {\r\n//     const [userInput, setUserInput] = useState(\"\");\r\n//     const [responses, setResponses] = useState([]);\r\n//     const chatboxRef = useRef();\r\n\r\n//     useEffect(() => {\r\n//         const welcomeMessage = \"ðŸ‘‹ Welcome to the Health Chatbot! How can I assist you today?\";\r\n//         setResponses([welcomeMessage]);\r\n\r\n//         const inputField = document.getElementById(\"user-input\");\r\n//         if (inputField) {\r\n//             inputField.focus();\r\n//         }\r\n//     }, []);\r\n\r\n//     const handleUserInput = (e) => {\r\n//         setUserInput(e.target.value);\r\n//     };\r\n\r\n//     const handleSend = async () => {\r\n//         if (userInput.trim()) {\r\n//             try {\r\n//                 // Make API call to your Flask backend\r\n//                 const response = await axios.post(\"http://localhost:5000/chatbot\", {\r\n//                     symptoms: userInput,\r\n//                 });\r\n\r\n//                 const newResponse = response.data.message || response.data.suggestions;\r\n//                 setResponses((prevResponses) => [\r\n//                     ...prevResponses,\r\n//                     `You said: ${userInput}`,\r\n//                     newResponse\r\n//                         ? `Suggestion: ${JSON.stringify(newResponse)}`\r\n//                         : \"I'm not sure how to respond to that.\",\r\n//                 ]);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching data from API:\", error);\r\n//                 setResponses((prevResponses) => [\r\n//                     ...prevResponses,\r\n//                     \"Error: Unable to reach the backend.\",\r\n//                 ]);\r\n//             }\r\n//             setUserInput(\"\");\r\n//         }\r\n//     };\r\n\r\n//     const handleClearChat = () => {\r\n//         const welcomeMessage = \"ðŸ‘‹ Welcome to the Health Chatbot! How can I assist you today?\";\r\n//         setResponses([welcomeMessage]);\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         if (chatboxRef.current) {\r\n//             chatboxRef.current.scrollTop = chatboxRef.current.scrollHeight;\r\n//         }\r\n//     }, [responses]);\r\n\r\n//     return (\r\n//         <div className=\"chatbot-container p-6 bg-white rounded-lg shadow-md\">\r\n//             <h2 className=\"text-2xl font-semibold mb-4\">ðŸ¤– Chatbot</h2>\r\n//             <div className=\"chatbox border border-gray-300 p-4 h-64 overflow-y-auto\" ref={chatboxRef}>\r\n//                 {responses.map((response, index) => (\r\n//                     <p key={index}>{response}</p>\r\n//                 ))}\r\n//             </div>\r\n//             <div className=\"flex mt-4\">\r\n//                 <input\r\n//                     id=\"user-input\"\r\n//                     type=\"text\"\r\n//                     value={userInput}\r\n//                     onChange={handleUserInput}\r\n//                     placeholder=\"Type your message...\"\r\n//                     className=\"border border-gray-300 rounded-l-lg p-2 flex-1\"\r\n//                 />\r\n//                 <button onClick={handleSend} className=\"bg-blue-600 text-white rounded-r-lg p-2\">\r\n//                     Send\r\n//                 </button>\r\n//             </div>\r\n//             <button onClick={handleClearChat} className=\"bg-red-600 text-white rounded p-2 mt-2\">\r\n//                 Clear Chat\r\n//             </button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Chatbot;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}