{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Intelligence\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorAttachmentListInstance = exports.OperatorAttachmentInstance = exports.OperatorAttachmentContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass OperatorAttachmentContextImpl {\n  constructor(_version, serviceSid, operatorSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n      throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(operatorSid)) {\n      throw new Error(\"Parameter 'operatorSid' is not valid.\");\n    }\n    this._solution = {\n      serviceSid,\n      operatorSid\n    };\n    this._uri = `/Services/${serviceSid}/Operators/${operatorSid}`;\n  }\n  create(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\"\n      });\n    operationPromise = operationPromise.then(payload => new OperatorAttachmentInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.operatorSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.OperatorAttachmentContextImpl = OperatorAttachmentContextImpl;\nclass OperatorAttachmentInstance {\n  constructor(_version, payload, serviceSid, operatorSid) {\n    this._version = _version;\n    this.serviceSid = payload.service_sid;\n    this.operatorSid = payload.operator_sid;\n    this.url = payload.url;\n    this._solution = {\n      serviceSid: serviceSid || this.serviceSid,\n      operatorSid: operatorSid || this.operatorSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new OperatorAttachmentContextImpl(this._version, this._solution.serviceSid, this._solution.operatorSid);\n    return this._context;\n  }\n  /**\n   * Create a OperatorAttachmentInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed OperatorAttachmentInstance\n   */\n  create(callback) {\n    return this._proxy.create(callback);\n  }\n  /**\n   * Remove a OperatorAttachmentInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      serviceSid: this.serviceSid,\n      operatorSid: this.operatorSid,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.OperatorAttachmentInstance = OperatorAttachmentInstance;\nfunction OperatorAttachmentListInstance(version) {\n  const instance = (serviceSid, operatorSid) => instance.get(serviceSid, operatorSid);\n  instance.get = function get(serviceSid, operatorSid) {\n    return new OperatorAttachmentContextImpl(version, serviceSid, operatorSid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.OperatorAttachmentListInstance = OperatorAttachmentListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","OperatorAttachmentListInstance","OperatorAttachmentInstance","OperatorAttachmentContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","serviceSid","operatorSid","isValidPathParam","Error","_solution","_uri","create","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","remove","toJSON","inspect","custom","_depth","options","service_sid","operator_sid","url","_proxy","_context","version","get","inspectImpl"],"sources":["D:/CHAT_BOT/chatbot_Frontend/node_modules/twilio/lib/rest/intelligence/v2/operatorAttachment.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Intelligence\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OperatorAttachmentListInstance = exports.OperatorAttachmentInstance = exports.OperatorAttachmentContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass OperatorAttachmentContextImpl {\n    constructor(_version, serviceSid, operatorSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n            throw new Error(\"Parameter 'serviceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(operatorSid)) {\n            throw new Error(\"Parameter 'operatorSid' is not valid.\");\n        }\n        this._solution = { serviceSid, operatorSid };\n        this._uri = `/Services/${serviceSid}/Operators/${operatorSid}`;\n    }\n    create(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n        });\n        operationPromise = operationPromise.then((payload) => new OperatorAttachmentInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.operatorSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.OperatorAttachmentContextImpl = OperatorAttachmentContextImpl;\nclass OperatorAttachmentInstance {\n    constructor(_version, payload, serviceSid, operatorSid) {\n        this._version = _version;\n        this.serviceSid = payload.service_sid;\n        this.operatorSid = payload.operator_sid;\n        this.url = payload.url;\n        this._solution = {\n            serviceSid: serviceSid || this.serviceSid,\n            operatorSid: operatorSid || this.operatorSid,\n        };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new OperatorAttachmentContextImpl(this._version, this._solution.serviceSid, this._solution.operatorSid);\n        return this._context;\n    }\n    /**\n     * Create a OperatorAttachmentInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed OperatorAttachmentInstance\n     */\n    create(callback) {\n        return this._proxy.create(callback);\n    }\n    /**\n     * Remove a OperatorAttachmentInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            serviceSid: this.serviceSid,\n            operatorSid: this.operatorSid,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.OperatorAttachmentInstance = OperatorAttachmentInstance;\nfunction OperatorAttachmentListInstance(version) {\n    const instance = ((serviceSid, operatorSid) => instance.get(serviceSid, operatorSid));\n    instance.get = function get(serviceSid, operatorSid) {\n        return new OperatorAttachmentContextImpl(version, serviceSid, operatorSid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.OperatorAttachmentListInstance = OperatorAttachmentListInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}