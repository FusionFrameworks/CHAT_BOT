{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Trusthub\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComplianceInquiriesListInstance = exports.ComplianceInquiriesInstance = exports.ComplianceInquiriesContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass ComplianceInquiriesContextImpl {\n  constructor(_version, customerId) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(customerId)) {\n      throw new Error(\"Parameter 'customerId' is not valid.\");\n    }\n    this._solution = {\n      customerId\n    };\n    this._uri = `/ComplianceInquiries/Customers/${customerId}/Initialize`;\n  }\n  update(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"primaryProfileSid\"] === null || params[\"primaryProfileSid\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['primaryProfileSid']\\\" missing.\");\n    }\n    let data = {};\n    data[\"PrimaryProfileSid\"] = params[\"primaryProfileSid\"];\n    if (params[\"themeSetId\"] !== undefined) data[\"ThemeSetId\"] = params[\"themeSetId\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ComplianceInquiriesInstance(operationVersion, payload, instance._solution.customerId));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ComplianceInquiriesContextImpl = ComplianceInquiriesContextImpl;\nclass ComplianceInquiriesInstance {\n  constructor(_version, payload, customerId) {\n    this._version = _version;\n    this.inquiryId = payload.inquiry_id;\n    this.inquirySessionToken = payload.inquiry_session_token;\n    this.customerId = payload.customer_id;\n    this.url = payload.url;\n    this._solution = {\n      customerId: customerId || this.customerId\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new ComplianceInquiriesContextImpl(this._version, this._solution.customerId);\n    return this._context;\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      inquiryId: this.inquiryId,\n      inquirySessionToken: this.inquirySessionToken,\n      customerId: this.customerId,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ComplianceInquiriesInstance = ComplianceInquiriesInstance;\nfunction ComplianceInquiriesListInstance(version) {\n  const instance = customerId => instance.get(customerId);\n  instance.get = function get(customerId) {\n    return new ComplianceInquiriesContextImpl(version, customerId);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/ComplianceInquiries/Customers/Initialize`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"primaryProfileSid\"] === null || params[\"primaryProfileSid\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['primaryProfileSid']\\\" missing.\");\n    }\n    let data = {};\n    data[\"PrimaryProfileSid\"] = params[\"primaryProfileSid\"];\n    if (params[\"notificationEmail\"] !== undefined) data[\"NotificationEmail\"] = params[\"notificationEmail\"];\n    if (params[\"themeSetId\"] !== undefined) data[\"ThemeSetId\"] = params[\"themeSetId\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ComplianceInquiriesInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.ComplianceInquiriesListInstance = ComplianceInquiriesListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","ComplianceInquiriesListInstance","ComplianceInquiriesInstance","ComplianceInquiriesContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","customerId","isValidPathParam","Error","_solution","_uri","update","params","callback","undefined","data","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","inquiryId","inquiry_id","inquirySessionToken","inquiry_session_token","customer_id","url","_proxy","_context","version","get","create","inspectImpl"],"sources":["D:/CHAT_BOT/chatbot_Frontend/node_modules/twilio/lib/rest/trusthub/v1/complianceInquiries.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Trusthub\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComplianceInquiriesListInstance = exports.ComplianceInquiriesInstance = exports.ComplianceInquiriesContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass ComplianceInquiriesContextImpl {\n    constructor(_version, customerId) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(customerId)) {\n            throw new Error(\"Parameter 'customerId' is not valid.\");\n        }\n        this._solution = { customerId };\n        this._uri = `/ComplianceInquiries/Customers/${customerId}/Initialize`;\n    }\n    update(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"primaryProfileSid\"] === null ||\n            params[\"primaryProfileSid\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['primaryProfileSid']\\\" missing.\");\n        }\n        let data = {};\n        data[\"PrimaryProfileSid\"] = params[\"primaryProfileSid\"];\n        if (params[\"themeSetId\"] !== undefined)\n            data[\"ThemeSetId\"] = params[\"themeSetId\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ComplianceInquiriesInstance(operationVersion, payload, instance._solution.customerId));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ComplianceInquiriesContextImpl = ComplianceInquiriesContextImpl;\nclass ComplianceInquiriesInstance {\n    constructor(_version, payload, customerId) {\n        this._version = _version;\n        this.inquiryId = payload.inquiry_id;\n        this.inquirySessionToken = payload.inquiry_session_token;\n        this.customerId = payload.customer_id;\n        this.url = payload.url;\n        this._solution = { customerId: customerId || this.customerId };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new ComplianceInquiriesContextImpl(this._version, this._solution.customerId);\n        return this._context;\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            inquiryId: this.inquiryId,\n            inquirySessionToken: this.inquirySessionToken,\n            customerId: this.customerId,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ComplianceInquiriesInstance = ComplianceInquiriesInstance;\nfunction ComplianceInquiriesListInstance(version) {\n    const instance = ((customerId) => instance.get(customerId));\n    instance.get = function get(customerId) {\n        return new ComplianceInquiriesContextImpl(version, customerId);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/ComplianceInquiries/Customers/Initialize`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"primaryProfileSid\"] === null ||\n            params[\"primaryProfileSid\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['primaryProfileSid']\\\" missing.\");\n        }\n        let data = {};\n        data[\"PrimaryProfileSid\"] = params[\"primaryProfileSid\"];\n        if (params[\"notificationEmail\"] !== undefined)\n            data[\"NotificationEmail\"] = params[\"notificationEmail\"];\n        if (params[\"themeSetId\"] !== undefined)\n            data[\"ThemeSetId\"] = params[\"themeSetId\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ComplianceInquiriesInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.ComplianceInquiriesListInstance = ComplianceInquiriesListInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}