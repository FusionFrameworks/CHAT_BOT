{"ast":null,"code":"var _jsxFileName = \"D:\\\\CHAT_BOT\\\\chatbot_Frontend\\\\src\\\\LabTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabTest = () => {\n  _s();\n  const [labTests, setLabTests] = useState([]); // State for lab test data\n  const [selectedTest, setSelectedTest] = useState(null); // State for the selected test\n  const [loading, setLoading] = useState(true); // Loading state\n\n  useEffect(() => {\n    // Fetch lab tests data from an API\n    const fetchLabTests = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/lab-tests'); // Replace with your API endpoint\n        setLabTests(response.data); // Set fetched data\n        setLoading(false); // Stop loading\n      } catch (error) {\n        console.error('Error fetching lab tests:', error);\n        setLoading(false);\n      }\n    };\n    fetchLabTests();\n  }, []);\n  const handlePayment = async test => {\n    setSelectedTest(test); // Set selected test for payment\n    const options = {\n      key: 'your_razorpay_key_here',\n      // Replace with your Razorpay API key\n      amount: parseInt(test.price.replace('₹', '')) * 100,\n      // Amount in paise\n      currency: 'INR',\n      name: 'Lab Test Booking',\n      description: test.name,\n      handler: function (response) {\n        alert(`Payment Successful!\\nTransaction ID: ${response.razorpay_payment_id}`);\n      },\n      prefill: {\n        name: 'Your Name',\n        // Replace with user details\n        email: 'your-email@example.com',\n        contact: '1234567890'\n      },\n      theme: {\n        color: '#3399cc'\n      }\n    };\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"Lab Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        color: '#999'\n      },\n      children: \"Loading tests...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: labTests.map((test, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          border: '1px solid #ddd',\n          marginBottom: '10px',\n          padding: '15px',\n          borderRadius: '8px',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0,\n            color: '#555'\n          },\n          children: test.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0',\n            color: '#666'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), \" \", test.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0',\n            color: '#666'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Guidelines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), \" \", test.guidelines]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePayment(test),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#3399cc',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px'\n          },\n          children: \"Book & Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(LabTest, \"3+Vm64ueBDZpy2Jw6w7nbefLJKY=\");\n_c = LabTest;\nexport default LabTest;\nvar _c;\n$RefreshReg$(_c, \"LabTest\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LabTest","_s","labTests","setLabTests","selectedTest","setSelectedTest","loading","setLoading","fetchLabTests","response","get","data","error","console","handlePayment","test","options","key","amount","parseInt","price","replace","currency","name","description","handler","alert","razorpay_payment_id","prefill","email","contact","theme","color","razorpay","window","Razorpay","open","style","padding","fontFamily","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","listStyleType","map","index","border","marginBottom","borderRadius","boxShadow","margin","guidelines","onClick","backgroundColor","cursor","fontSize","_c","$RefreshReg$"],"sources":["D:/CHAT_BOT/chatbot_Frontend/src/LabTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LabTest = () => {\r\n    const [labTests, setLabTests] = useState([]); // State for lab test data\r\n    const [selectedTest, setSelectedTest] = useState(null); // State for the selected test\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n\r\n    useEffect(() => {\r\n        // Fetch lab tests data from an API\r\n        const fetchLabTests = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/lab-tests'); // Replace with your API endpoint\r\n                setLabTests(response.data); // Set fetched data\r\n                setLoading(false); // Stop loading\r\n            } catch (error) {\r\n                console.error('Error fetching lab tests:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchLabTests();\r\n    }, []);\r\n\r\n    const handlePayment = async (test) => {\r\n        setSelectedTest(test); // Set selected test for payment\r\n        const options = {\r\n            key: 'your_razorpay_key_here', // Replace with your Razorpay API key\r\n            amount: parseInt(test.price.replace('₹', '')) * 100, // Amount in paise\r\n            currency: 'INR',\r\n            name: 'Lab Test Booking',\r\n            description: test.name,\r\n            handler: function (response) {\r\n                alert(`Payment Successful!\\nTransaction ID: ${response.razorpay_payment_id}`);\r\n            },\r\n            prefill: {\r\n                name: 'Your Name', // Replace with user details\r\n                email: 'your-email@example.com',\r\n                contact: '1234567890',\r\n            },\r\n            theme: {\r\n                color: '#3399cc',\r\n            },\r\n        };\r\n\r\n        const razorpay = new window.Razorpay(options);\r\n        razorpay.open();\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n            <h1 style={{ textAlign: 'center', color: '#333' }}>Lab Tests</h1>\r\n            {loading ? (\r\n                <p style={{ textAlign: 'center', color: '#999' }}>Loading tests...</p>\r\n            ) : (\r\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n                    {labTests.map((test, index) => (\r\n                        <li\r\n                            key={index}\r\n                            style={{\r\n                                border: '1px solid #ddd',\r\n                                marginBottom: '10px',\r\n                                padding: '15px',\r\n                                borderRadius: '8px',\r\n                                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n                            }}\r\n                        >\r\n                            <h3 style={{ margin: 0, color: '#555' }}>{test.name}</h3>\r\n                            <p style={{ margin: '5px 0', color: '#666' }}>\r\n                                <strong>Price:</strong> {test.price}\r\n                            </p>\r\n                            <p style={{ margin: '5px 0', color: '#666' }}>\r\n                                <strong>Guidelines:</strong> {test.guidelines}\r\n                            </p>\r\n                            <button\r\n                                onClick={() => handlePayment(test)}\r\n                                style={{\r\n                                    padding: '10px 20px',\r\n                                    backgroundColor: '#3399cc',\r\n                                    color: '#fff',\r\n                                    border: 'none',\r\n                                    borderRadius: '4px',\r\n                                    cursor: 'pointer',\r\n                                    fontSize: '14px',\r\n                                }}\r\n                            >\r\n                                Book & Pay\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}