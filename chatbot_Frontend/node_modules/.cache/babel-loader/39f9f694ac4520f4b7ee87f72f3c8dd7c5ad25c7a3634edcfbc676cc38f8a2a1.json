{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Numbers\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BulkHostedNumberOrderListInstance = exports.BulkHostedNumberOrderInstance = exports.BulkHostedNumberOrderContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass BulkHostedNumberOrderContextImpl {\n  constructor(_version, bulkHostingSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(bulkHostingSid)) {\n      throw new Error(\"Parameter 'bulkHostingSid' is not valid.\");\n    }\n    this._solution = {\n      bulkHostingSid\n    };\n    this._uri = `/HostedNumber/Orders/Bulk/${bulkHostingSid}`;\n  }\n  fetch(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"orderStatus\"] !== undefined) data[\"OrderStatus\"] = params[\"orderStatus\"];\n    const headers = {};\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new BulkHostedNumberOrderInstance(operationVersion, payload, instance._solution.bulkHostingSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.BulkHostedNumberOrderContextImpl = BulkHostedNumberOrderContextImpl;\nclass BulkHostedNumberOrderInstance {\n  constructor(_version, payload, bulkHostingSid) {\n    this._version = _version;\n    this.bulkHostingSid = payload.bulk_hosting_sid;\n    this.requestStatus = payload.request_status;\n    this.friendlyName = payload.friendly_name;\n    this.notificationEmail = payload.notification_email;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateCompleted = deserialize.iso8601DateTime(payload.date_completed);\n    this.url = payload.url;\n    this.totalCount = deserialize.integer(payload.total_count);\n    this.results = payload.results;\n    this._solution = {\n      bulkHostingSid: bulkHostingSid || this.bulkHostingSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new BulkHostedNumberOrderContextImpl(this._version, this._solution.bulkHostingSid);\n    return this._context;\n  }\n  fetch(params, callback) {\n    return this._proxy.fetch(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      bulkHostingSid: this.bulkHostingSid,\n      requestStatus: this.requestStatus,\n      friendlyName: this.friendlyName,\n      notificationEmail: this.notificationEmail,\n      dateCreated: this.dateCreated,\n      dateCompleted: this.dateCompleted,\n      url: this.url,\n      totalCount: this.totalCount,\n      results: this.results\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.BulkHostedNumberOrderInstance = BulkHostedNumberOrderInstance;\nfunction BulkHostedNumberOrderListInstance(version) {\n  const instance = bulkHostingSid => instance.get(bulkHostingSid);\n  instance.get = function get(bulkHostingSid) {\n    return new BulkHostedNumberOrderContextImpl(version, bulkHostingSid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/HostedNumber/Orders/Bulk`;\n  instance.create = function create(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    data = params;\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new BulkHostedNumberOrderInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.BulkHostedNumberOrderListInstance = BulkHostedNumberOrderListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","BulkHostedNumberOrderListInstance","BulkHostedNumberOrderInstance","BulkHostedNumberOrderContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","bulkHostingSid","isValidPathParam","Error","_solution","_uri","fetch","params","callback","Function","data","undefined","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","bulk_hosting_sid","requestStatus","request_status","friendlyName","friendly_name","notificationEmail","notification_email","dateCreated","iso8601DateTime","date_created","dateCompleted","date_completed","url","totalCount","integer","total_count","results","_proxy","_context","version","get","create","inspectImpl"],"sources":["D:/CHAT_BOT/chatbot_Frontend/node_modules/twilio/lib/rest/numbers/v2/bulkHostedNumberOrder.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Numbers\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkHostedNumberOrderListInstance = exports.BulkHostedNumberOrderInstance = exports.BulkHostedNumberOrderContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass BulkHostedNumberOrderContextImpl {\n    constructor(_version, bulkHostingSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(bulkHostingSid)) {\n            throw new Error(\"Parameter 'bulkHostingSid' is not valid.\");\n        }\n        this._solution = { bulkHostingSid };\n        this._uri = `/HostedNumber/Orders/Bulk/${bulkHostingSid}`;\n    }\n    fetch(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"orderStatus\"] !== undefined)\n            data[\"OrderStatus\"] = params[\"orderStatus\"];\n        const headers = {};\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new BulkHostedNumberOrderInstance(operationVersion, payload, instance._solution.bulkHostingSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.BulkHostedNumberOrderContextImpl = BulkHostedNumberOrderContextImpl;\nclass BulkHostedNumberOrderInstance {\n    constructor(_version, payload, bulkHostingSid) {\n        this._version = _version;\n        this.bulkHostingSid = payload.bulk_hosting_sid;\n        this.requestStatus = payload.request_status;\n        this.friendlyName = payload.friendly_name;\n        this.notificationEmail = payload.notification_email;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateCompleted = deserialize.iso8601DateTime(payload.date_completed);\n        this.url = payload.url;\n        this.totalCount = deserialize.integer(payload.total_count);\n        this.results = payload.results;\n        this._solution = { bulkHostingSid: bulkHostingSid || this.bulkHostingSid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new BulkHostedNumberOrderContextImpl(this._version, this._solution.bulkHostingSid);\n        return this._context;\n    }\n    fetch(params, callback) {\n        return this._proxy.fetch(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            bulkHostingSid: this.bulkHostingSid,\n            requestStatus: this.requestStatus,\n            friendlyName: this.friendlyName,\n            notificationEmail: this.notificationEmail,\n            dateCreated: this.dateCreated,\n            dateCompleted: this.dateCompleted,\n            url: this.url,\n            totalCount: this.totalCount,\n            results: this.results,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.BulkHostedNumberOrderInstance = BulkHostedNumberOrderInstance;\nfunction BulkHostedNumberOrderListInstance(version) {\n    const instance = ((bulkHostingSid) => instance.get(bulkHostingSid));\n    instance.get = function get(bulkHostingSid) {\n        return new BulkHostedNumberOrderContextImpl(version, bulkHostingSid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/HostedNumber/Orders/Bulk`;\n    instance.create = function create(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        data = params;\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new BulkHostedNumberOrderInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.BulkHostedNumberOrderListInstance = BulkHostedNumberOrderListInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}