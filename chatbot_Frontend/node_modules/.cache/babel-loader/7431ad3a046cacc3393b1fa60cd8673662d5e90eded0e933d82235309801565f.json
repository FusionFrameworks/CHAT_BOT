{"ast":null,"code":"// // src/api.js\n// const API_BASE_URL = 'http://localhost:5000/api/auth';\n\n// export const registerUser = async (userData) => {\n//     const response = await fetch(`${API_BASE_URL}/register`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(userData)\n//     });\n//     return response.json();\n// };\n\n// export const sendOtp = async (mobileNumber) => {\n//     const response = await fetch(`${API_BASE_URL}/login`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ mobileNumber })\n//     });\n//     return response.json();\n// };\n\n// export const verifyOtp = async (mobileNumber, otp) => {\n//     const response = await fetch(`${API_BASE_URL}/verify-otp`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ mobileNumber, otp })\n//     });\n//     return response.json();\n// };\n\n// src/api.js\nconst API_BASE_URL = 'http://localhost:5000/api/auth'; // Update base URL if necessary\nconst DOCTOR_API_BASE_URL = 'http://127.0.0.1:5000/suggest_doctor'; // Assuming your doctor suggestion API is at this base URL\n\nexport const registerUser = async userData => {\n  const response = await fetch(`${API_BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  return response.json();\n};\nexport const sendOtp = async mobileNumber => {\n  const response = await fetch(`${API_BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      mobileNumber\n    })\n  });\n  return response.json();\n};\nexport const verifyOtp = async (mobileNumber, otp) => {\n  const response = await fetch(`${API_BASE_URL}/verify-otp`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      mobileNumber,\n      otp\n    })\n  });\n  return response.json();\n};\n\n// New function to suggest doctors based on symptoms\nexport const suggestDoctor = async (symptoms, paymentStatus = false) => {\n  const response = await fetch(`${DOCTOR_API_BASE_URL}/suggest_doctor`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      symptoms,\n      payment_status: paymentStatus\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch doctor suggestions');\n  }\n  return response.json(); // Return the JSON response\n};","map":{"version":3,"names":["API_BASE_URL","DOCTOR_API_BASE_URL","registerUser","userData","response","fetch","method","headers","body","JSON","stringify","json","sendOtp","mobileNumber","verifyOtp","otp","suggestDoctor","symptoms","paymentStatus","payment_status","ok","Error"],"sources":["C:/Users/varun/Documents/DEV/Major Project/CHAT_BOT/chatbot_Frontend/src/api.js"],"sourcesContent":["\r\n// // src/api.js\r\n// const API_BASE_URL = 'http://localhost:5000/api/auth';\r\n\r\n// export const registerUser = async (userData) => {\r\n//     const response = await fetch(`${API_BASE_URL}/register`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(userData)\r\n//     });\r\n//     return response.json();\r\n// };\r\n\r\n// export const sendOtp = async (mobileNumber) => {\r\n//     const response = await fetch(`${API_BASE_URL}/login`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ mobileNumber })\r\n//     });\r\n//     return response.json();\r\n// };\r\n\r\n// export const verifyOtp = async (mobileNumber, otp) => {\r\n//     const response = await fetch(`${API_BASE_URL}/verify-otp`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ mobileNumber, otp })\r\n//     });\r\n//     return response.json();\r\n// };\r\n\r\n\r\n// src/api.js\r\nconst API_BASE_URL = 'http://localhost:5000/api/auth';  // Update base URL if necessary\r\nconst DOCTOR_API_BASE_URL = 'http://127.0.0.1:5000/suggest_doctor';  // Assuming your doctor suggestion API is at this base URL\r\n\r\nexport const registerUser = async (userData) => {\r\n    const response = await fetch(`${API_BASE_URL}/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData)\r\n    });\r\n    return response.json();\r\n};\r\n\r\nexport const sendOtp = async (mobileNumber) => {\r\n    const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ mobileNumber })\r\n    });\r\n    return response.json();\r\n};\r\n\r\nexport const verifyOtp = async (mobileNumber, otp) => {\r\n    const response = await fetch(`${API_BASE_URL}/verify-otp`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ mobileNumber, otp })\r\n    });\r\n    return response.json();\r\n};\r\n\r\n// New function to suggest doctors based on symptoms\r\nexport const suggestDoctor = async (symptoms, paymentStatus = false) => {\r\n    const response = await fetch(`${DOCTOR_API_BASE_URL}/suggest_doctor`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ symptoms, payment_status: paymentStatus })\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Failed to fetch doctor suggestions');\r\n    }\r\n    \r\n    return response.json();  // Return the JSON response\r\n};\r\n"],"mappings":"AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,MAAMA,YAAY,GAAG,gCAAgC,CAAC,CAAE;AACxD,MAAMC,mBAAmB,GAAG,sCAAsC,CAAC,CAAE;;AAErE,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,WAAW,EAAE;IACrDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EACjC,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,YAAY,IAAK;EAC3C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,QAAQ,EAAE;IAClDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG;IAAa,CAAC;EACzC,CAAC,CAAC;EACF,OAAOT,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,MAAAA,CAAOD,YAAY,EAAEE,GAAG,KAAK;EAClD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,aAAa,EAAE;IACvDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG,YAAY;MAAEE;IAAI,CAAC;EAC9C,CAAC,CAAC;EACF,OAAOX,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,aAAa,GAAG,KAAK,KAAK;EACpE,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,mBAAmB,iBAAiB,EAAE;IAClEK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEO,QAAQ;MAAEE,cAAc,EAAED;IAAc,CAAC;EACpE,CAAC,CAAC;EAEF,IAAI,CAACd,QAAQ,CAACgB,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;EACzD;EAEA,OAAOjB,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC,CAAE;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}