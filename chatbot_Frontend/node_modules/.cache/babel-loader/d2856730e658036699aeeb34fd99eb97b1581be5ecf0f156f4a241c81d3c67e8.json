{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Flex\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InteractionListInstance = exports.InteractionInstance = exports.InteractionContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst interactionChannel_1 = require(\"./interaction/interactionChannel\");\nclass InteractionContextImpl {\n  constructor(_version, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      sid\n    };\n    this._uri = `/Interactions/${sid}`;\n  }\n  get channels() {\n    this._channels = this._channels || (0, interactionChannel_1.InteractionChannelListInstance)(this._version, this._solution.sid);\n    return this._channels;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new InteractionInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.InteractionContextImpl = InteractionContextImpl;\nclass InteractionInstance {\n  constructor(_version, payload, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.channel = payload.channel;\n    this.routing = payload.routing;\n    this.url = payload.url;\n    this.links = payload.links;\n    this.interactionContextSid = payload.interaction_context_sid;\n    this._solution = {\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new InteractionContextImpl(this._version, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Fetch a InteractionInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed InteractionInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Access the channels.\n   */\n  channels() {\n    return this._proxy.channels;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      channel: this.channel,\n      routing: this.routing,\n      url: this.url,\n      links: this.links,\n      interactionContextSid: this.interactionContextSid\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.InteractionInstance = InteractionInstance;\nfunction InteractionListInstance(version) {\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new InteractionContextImpl(version, sid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/Interactions`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"channel\"] === null || params[\"channel\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['channel']\\\" missing.\");\n    }\n    let data = {};\n    data[\"Channel\"] = serialize.object(params[\"channel\"]);\n    if (params[\"routing\"] !== undefined) data[\"Routing\"] = serialize.object(params[\"routing\"]);\n    if (params[\"interactionContextSid\"] !== undefined) data[\"InteractionContextSid\"] = params[\"interactionContextSid\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new InteractionInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.InteractionListInstance = InteractionListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","InteractionListInstance","InteractionInstance","InteractionContextImpl","util_1","require","deserialize","serialize","utility_1","interactionChannel_1","constructor","_version","sid","isValidPathParam","Error","_solution","_uri","channels","_channels","InteractionChannelListInstance","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","channel","routing","url","links","interactionContextSid","interaction_context_sid","_proxy","_context","version","get","create","params","undefined","data","object","headers","inspectImpl"],"sources":["D:/CHAT_BOT/chatbot_Frontend/node_modules/twilio/lib/rest/flexApi/v1/interaction.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Flex\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InteractionListInstance = exports.InteractionInstance = exports.InteractionContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst interactionChannel_1 = require(\"./interaction/interactionChannel\");\nclass InteractionContextImpl {\n    constructor(_version, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { sid };\n        this._uri = `/Interactions/${sid}`;\n    }\n    get channels() {\n        this._channels =\n            this._channels ||\n                (0, interactionChannel_1.InteractionChannelListInstance)(this._version, this._solution.sid);\n        return this._channels;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new InteractionInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.InteractionContextImpl = InteractionContextImpl;\nclass InteractionInstance {\n    constructor(_version, payload, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.channel = payload.channel;\n        this.routing = payload.routing;\n        this.url = payload.url;\n        this.links = payload.links;\n        this.interactionContextSid = payload.interaction_context_sid;\n        this._solution = { sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new InteractionContextImpl(this._version, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Fetch a InteractionInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed InteractionInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Access the channels.\n     */\n    channels() {\n        return this._proxy.channels;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            channel: this.channel,\n            routing: this.routing,\n            url: this.url,\n            links: this.links,\n            interactionContextSid: this.interactionContextSid,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.InteractionInstance = InteractionInstance;\nfunction InteractionListInstance(version) {\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new InteractionContextImpl(version, sid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/Interactions`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"channel\"] === null || params[\"channel\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['channel']\\\" missing.\");\n        }\n        let data = {};\n        data[\"Channel\"] = serialize.object(params[\"channel\"]);\n        if (params[\"routing\"] !== undefined)\n            data[\"Routing\"] = serialize.object(params[\"routing\"]);\n        if (params[\"interactionContextSid\"] !== undefined)\n            data[\"InteractionContextSid\"] = params[\"interactionContextSid\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new InteractionInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.InteractionListInstance = InteractionListInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}