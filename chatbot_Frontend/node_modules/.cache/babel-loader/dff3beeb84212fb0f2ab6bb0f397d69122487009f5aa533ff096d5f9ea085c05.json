{"ast":null,"code":"// // api.jsauth\n// const API_BASE_URL = 'http://localhost:3000/api/auth/register';\n\n// /**\n//  * Registers a new user.\n//  * @param {Object} userData - The user data for registration.\n//  * @returns {Promise<Object>} - The response from the server.\n//  */\n// export const registerUser = async (userData) => {\n//     try {\n//         const response = await fetch(`${API_BASE_URL}/register`, {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify(userData),\n//         });\n\n//         if (!response.ok) {\n//             throw new Error(`Error: ${response.status} - ${response.statusText}`);\n//         }\n\n//         return await response.json();\n//     } catch (error) {\n//         console.error('Registration failed:', error);\n//         return { message: 'Registration failed' };\n//     }\n// };\n\n// /**\n//  * Sends an OTP to the user's mobile number.\n//  * @param {string} mobileNumber - The user's mobile number.\n//  * @returns {Promise<Object>} - The response from the server.\n//  */\n// export const sendOtp = async (mobileNumber) => {\n//     try {\n//         const response = await fetch(`${API_BASE_URL}/login`, {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ mobileNumber }),\n//         });\n\n//         if (!response.ok) {\n//             throw new Error(`Error: ${response.status} - ${response.statusText}`);\n//         }\n\n//         return await response.json();\n//     } catch (error) {\n//         console.error('Sending OTP failed:', error);\n//         return { message: 'Sending OTP failed' };\n//     }\n// };\n\n// /**\n//  * Verifies the OTP sent to the user's mobile number.\n//  * @param {string} mobileNumber - The user's mobile number.\n//  * @param {string} otp - The OTP to verify.\n//  * @returns {Promise<Object>} - The response from the server.\n//  */\n// export const verifyOtp = async (mobileNumber, otp) => {\n//     try {\n//         const response = await fetch(`${API_BASE_URL}/verify-otp`, {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ mobileNumber, otp }),\n//         });\n\n//         if (!response.ok) {\n//             throw new Error(`Error: ${response.status} - ${response.statusText}`);\n//         }\n\n//         return await response.json();\n//     } catch (error) {\n//         console.error('OTP verification failed:', error);\n//         return { message: 'OTP verification failed' };\n//     }\n// };\n\n// src/api.js\nconst API_BASE_URL = 'http://localhost:3000/api/auth';\nexport const registerUser = async userData => {\n  const response = await fetch(`${API_BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  return response.json();\n};\nexport const sendOtp = async mobileNumber => {\n  const response = await fetch(`${API_BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      mobileNumber\n    })\n  });\n  return response.json();\n};\nexport const verifyOtp = async (mobileNumber, otp) => {\n  const response = await fetch(`${API_BASE_URL}/verify-otp`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      mobileNumber,\n      otp\n    })\n  });\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","registerUser","userData","response","fetch","method","headers","body","JSON","stringify","json","sendOtp","mobileNumber","verifyOtp","otp"],"sources":["D:/ChatBot/chatbot-frontend/src/api.js"],"sourcesContent":["// // api.jsauth\r\n// const API_BASE_URL = 'http://localhost:3000/api/auth/register';\r\n\r\n// /**\r\n//  * Registers a new user.\r\n//  * @param {Object} userData - The user data for registration.\r\n//  * @returns {Promise<Object>} - The response from the server.\r\n//  */\r\n// export const registerUser = async (userData) => {\r\n//     try {\r\n//         const response = await fetch(`${API_BASE_URL}/register`, {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify(userData),\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//             throw new Error(`Error: ${response.status} - ${response.statusText}`);\r\n//         }\r\n\r\n//         return await response.json();\r\n//     } catch (error) {\r\n//         console.error('Registration failed:', error);\r\n//         return { message: 'Registration failed' };\r\n//     }\r\n// };\r\n\r\n// /**\r\n//  * Sends an OTP to the user's mobile number.\r\n//  * @param {string} mobileNumber - The user's mobile number.\r\n//  * @returns {Promise<Object>} - The response from the server.\r\n//  */\r\n// export const sendOtp = async (mobileNumber) => {\r\n//     try {\r\n//         const response = await fetch(`${API_BASE_URL}/login`, {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ mobileNumber }),\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//             throw new Error(`Error: ${response.status} - ${response.statusText}`);\r\n//         }\r\n\r\n//         return await response.json();\r\n//     } catch (error) {\r\n//         console.error('Sending OTP failed:', error);\r\n//         return { message: 'Sending OTP failed' };\r\n//     }\r\n// };\r\n\r\n// /**\r\n//  * Verifies the OTP sent to the user's mobile number.\r\n//  * @param {string} mobileNumber - The user's mobile number.\r\n//  * @param {string} otp - The OTP to verify.\r\n//  * @returns {Promise<Object>} - The response from the server.\r\n//  */\r\n// export const verifyOtp = async (mobileNumber, otp) => {\r\n//     try {\r\n//         const response = await fetch(`${API_BASE_URL}/verify-otp`, {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ mobileNumber, otp }),\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//             throw new Error(`Error: ${response.status} - ${response.statusText}`);\r\n//         }\r\n\r\n//         return await response.json();\r\n//     } catch (error) {\r\n//         console.error('OTP verification failed:', error);\r\n//         return { message: 'OTP verification failed' };\r\n//     }\r\n// };\r\n\r\n\r\n\r\n// src/api.js\r\nconst API_BASE_URL = 'http://localhost:3000/api/auth';\r\n\r\nexport const registerUser = async (userData) => {\r\n    const response = await fetch(`${API_BASE_URL}/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData)\r\n    });\r\n    return response.json();\r\n};\r\n\r\nexport const sendOtp = async (mobileNumber) => {\r\n    const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ mobileNumber })\r\n    });\r\n    return response.json();\r\n};\r\n\r\nexport const verifyOtp = async (mobileNumber, otp) => {\r\n    const response = await fetch(`${API_BASE_URL}/verify-otp`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ mobileNumber, otp })\r\n    });\r\n    return response.json();\r\n};\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA,MAAMA,YAAY,GAAG,gCAAgC;AAErD,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,EAAE;IACrDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EACjC,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,YAAY,IAAK;EAC3C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,QAAQ,EAAE;IAClDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG;IAAa,CAAC;EACzC,CAAC,CAAC;EACF,OAAOT,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,MAAAA,CAAOD,YAAY,EAAEE,GAAG,KAAK;EAClD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAa,EAAE;IACvDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG,YAAY;MAAEE;IAAI,CAAC;EAC9C,CAAC,CAAC;EACF,OAAOX,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}